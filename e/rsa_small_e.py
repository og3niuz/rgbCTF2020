def generate_ciphertext():
    p = 0x83651d69755998f1f361a70401f2f15d96f0c209d4b7a17e4ec490895edd30a82bec07477f5806327f8422f776049070d2daf3934da7a63f4dc43cc2aaa68e208619bee1d67efe6352cb5283ccd8cf5338daab7bf1b24e813cb6759e7724a931e83195a68062f63c03b11f94524d72b0b06d2a1e15fc183a7833c20c2d3f69af6baafadc3c7950966940e34e22f18b54ae3c399f80907965193697546477fa6ea79199d9343386663f11d392f236db8390b0bd22677a3b70f4b4fbf74996825e0ae286405785653ba6701de379f043ace8a2c5481931d4c11ef91a4c42e24f5af467f334298df371736f8b374ffb622b250956699406504df0f5be18654f695f

    q = 0xba7ca200b2d9f0ab411373f7326fd307b0c70d23e06c87d2e94c9bda10b3192c4f8f66a50363ec15ab61caa755edd73ea1425a41f20dc66dd85be279ec48d937f2a28494a85e31fe875f6f29d12d0e37c5dc1068ccb7a634705827a83360798bc08e3c95a7b7e473ce08d2ac7c89e6859c984a37a7178ab2ac4d0660c348f8b92dd8d914480078e17359ee51ae7b769e7d9b24d3e51cd6e7fda64c523caf614870414a0a7323acf889924944bd7e2f18a7dd75ac3c0090f92e11f97885c45c2da62eb684ee5f62291c6cf80a1ee9d8c47829171da9e012ab2fef38c0229c5f2d4e69eed4026a03e3c80343fbbada11f5fab2ad5a42c89341cda49ce3af6de7bf

    n = p * q
    e = 13

    flag = b"rgbCTF{lucky_number_13}"

    c = pow(int.from_bytes(flag, byteorder='little'), e, n)
    print('n =', hex(n))
    print('e =', bin(e))
    print('c =', hex(c))

